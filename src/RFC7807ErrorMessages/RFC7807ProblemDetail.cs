using System;
using System.Runtime.Serialization;

namespace DeLoachAero.WebApi
{
    [DataContract(Name = "problem", Namespace = "urn:ietf:rfc:7807")]
    public class RFC7807ProblemDetail
    {
        /// <summary>
        /// From RFC7807:
        /// A URI reference [RFC3986] that identifies the
        /// problem type. This specification encourages that, when
        /// dereferenced, it provide human-readable documentation for the
        /// problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When
        /// this member is not present, its value is assumed to be "about:blank".
        /// </summary>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public Uri Type { get; set; }

        /// <summary>
        /// From RFC7807:
        /// A short, human-readable summary of the problem
        /// type. It SHOULD NOT change from occurrence to occurrence of the
        /// problem, except for purposes of localization (e.g., using
        /// proactive content negotiation; see[RFC7231], Section 3.4).
        /// </summary>
        [DataMember(Name = "title", EmitDefaultValue = false)]
        public string Title { get; set; }

        /// <summary>
        /// From RFC7807:
        /// The HTTP status code ([RFC7231], Section 6)
        /// generated by the origin server for this occurrence of the problem.
        /// </summary>
        [DataMember(Name = "status")]
        public int Status { get; set; }

        /// <summary>
        /// From RFC7807:
        /// A human-readable explanation specific to this occurrence of the problem.
        /// If present, ought to focus on helping the client correct the problem, 
        /// rather than giving debugging information.
        /// </summary>
        [DataMember(Name = "detail", EmitDefaultValue = false)]
        public string Detail { get; set; }

        /// <summary>
        /// From RFC7807:
        /// A URI reference that identifies the specific occurrence of the problem.
        /// It may or may not yield further information if dereferenced.
        /// </summary>
        [DataMember(Name = "instance", EmitDefaultValue = false)]
        public Uri Instance { get; set; }
    }
}